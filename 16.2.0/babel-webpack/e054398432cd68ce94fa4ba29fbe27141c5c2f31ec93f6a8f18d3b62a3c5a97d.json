{"ast":null,"code":"var _class;\nimport { FormControl } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/quote.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction QuoteSearchComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3)(1, \"h3\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const quote_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(quote_r1.content);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"- \", quote_r1.author, \"\");\n  }\n}\nexport class QuoteSearchComponent {\n  constructor(quoteService) {\n    this.quoteService = quoteService;\n    this.searchControl = new FormControl();\n    this.quotes = [];\n  }\n  ngOnInit() {\n    this.searchControl.valueChanges.subscribe(searchTerm => {\n      if (searchTerm) {\n        this.quoteService.searchQuotes(searchTerm).subscribe(data => this.quotes = data.results, error => console.error('Error getting quotes:', error));\n      } else {\n        this.quotes = []; // Clear the quotes if the search term is empty\n      }\n    });\n  }\n}\n_class = QuoteSearchComponent;\n_class.ɵfac = function QuoteSearchComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.QuoteService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-quote-search\"]],\n  decls: 3,\n  vars: 2,\n  consts: [[\"type\", \"text\", \"placeholder\", \"Search for quotes\", 3, \"formControl\"], [1, \"grid\", \"grid-columns-3\"], [\"class\", \"card\", 4, \"ngFor\", \"ngForOf\"], [1, \"card\"]],\n  template: function QuoteSearchComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"input\", 0);\n      i0.ɵɵelementStart(1, \"div\", 1);\n      i0.ɵɵtemplate(2, QuoteSearchComponent_div_2_Template, 5, 2, \"div\", 2);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formControl\", ctx.searchControl);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.quotes);\n    }\n  },\n  dependencies: [i2.NgForOf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.FormControlDirective],\n  styles: [\".grid[_ngcontent-%COMP%]{\\n    display: grid;\\n\\n}\\n\\n.grid-columns-3[_ngcontent-%COMP%]{\\n    grid-template-columns: repeat(3, minmax(0, 1fr));\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxhQUFhOztBQUVqQjs7QUFFQTtJQUNJLGdEQUFnRDtBQUNwRCIsInNvdXJjZXNDb250ZW50IjpbIi5ncmlke1xuICAgIGRpc3BsYXk6IGdyaWQ7XG5cbn1cblxuLmdyaWQtY29sdW1ucy0ze1xuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDMsIG1pbm1heCgwLCAxZnIpKTtcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"names":["FormControl","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","quote_r1","content","ɵɵtextInterpolate1","author","QuoteSearchComponent","constructor","quoteService","searchControl","quotes","ngOnInit","valueChanges","subscribe","searchTerm","searchQuotes","data","results","error","console","ɵɵdirectiveInject","i1","QuoteService","selectors","decls","vars","consts","template","QuoteSearchComponent_Template","rf","ctx","ɵɵelement","ɵɵtemplate","QuoteSearchComponent_div_2_Template","ɵɵproperty"],"sources":["/Users/nickgoudeau/professionalProjects/tmo-hw/tmo-app/src/app/quote-search/quote-search.component.ts","/Users/nickgoudeau/professionalProjects/tmo-hw/tmo-app/src/app/quote-search/quote-search.component.html"],"sourcesContent":["import {Component, OnInit} from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { Quote, QuoteResponse } from '../models/quote.model';\nimport { QuoteService } from '../services/quote.service';\n\n\n\n\n\n\n\n@Component({\n    selector: 'app-quote-search',\n    templateUrl: './quote-search.component.html',\n    styleUrls: ['../app.component.css']\n})\n\nexport class QuoteSearchComponent implements OnInit {\n    searchControl = new FormControl;\n\n    quotes: Quote[] = [];\n\n    constructor(private quoteService: QuoteService){}\n    \n    ngOnInit(): void {\n        this.searchControl.valueChanges.subscribe(searchTerm => {\n            if(searchTerm){\n                this.quoteService.searchQuotes(searchTerm).subscribe(\n                    (data: QuoteResponse) => this.quotes = data.results,\n                    error => console.error('Error getting quotes:', error)\n                );\n            }else {\n                this.quotes = [];  // Clear the quotes if the search term is empty\n            }\n        });\n    }\n}","<input\n  type=\"text\"\n  [formControl]=\"searchControl\"\n  placeholder=\"Search for quotes\"\n/>\n<div class=\"grid grid-columns-3\">\n  <div *ngFor=\"let quote of quotes\" class=\"card\">\n    <h3>{{ quote.content }}</h3>\n    <p>- {{ quote.author }}</p>\n  </div>\n</div>\n"],"mappings":";AACA,SAASA,WAAW,QAAQ,gBAAgB;;;;;;;ICK1CC,EAAA,CAAAC,cAAA,aAA+C;IACzCD,EAAA,CAAAE,MAAA,GAAmB;IAAAF,EAAA,CAAAG,YAAA,EAAK;IAC5BH,EAAA,CAAAC,cAAA,QAAG;IAAAD,EAAA,CAAAE,MAAA,GAAoB;IAAAF,EAAA,CAAAG,YAAA,EAAI;;;;IADvBH,EAAA,CAAAI,SAAA,GAAmB;IAAnBJ,EAAA,CAAAK,iBAAA,CAAAC,QAAA,CAAAC,OAAA,CAAmB;IACpBP,EAAA,CAAAI,SAAA,GAAoB;IAApBJ,EAAA,CAAAQ,kBAAA,OAAAF,QAAA,CAAAG,MAAA,KAAoB;;;ADS3B,OAAM,MAAOC,oBAAoB;EAK7BC,YAAoBC,YAA0B;IAA1B,KAAAA,YAAY,GAAZA,YAAY;IAJhC,KAAAC,aAAa,GAAG,IAAId,WAAW,CAAX,CAAW;IAE/B,KAAAe,MAAM,GAAY,EAAE;EAE4B;EAEhDC,QAAQA,CAAA;IACJ,IAAI,CAACF,aAAa,CAACG,YAAY,CAACC,SAAS,CAACC,UAAU,IAAG;MACnD,IAAGA,UAAU,EAAC;QACV,IAAI,CAACN,YAAY,CAACO,YAAY,CAACD,UAAU,CAAC,CAACD,SAAS,CAC/CG,IAAmB,IAAK,IAAI,CAACN,MAAM,GAAGM,IAAI,CAACC,OAAO,EACnDC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC,CACzD;OACJ,MAAK;QACF,IAAI,CAACR,MAAM,GAAG,EAAE,CAAC,CAAE;;IAE3B,CAAC,CAAC;EACN;;SAlBSJ,oBAAoB;;mBAApBA,MAAoB,EAAAV,EAAA,CAAAwB,iBAAA,CAAAC,EAAA,CAAAC,YAAA;AAAA;;QAApBhB,MAAoB;EAAAiB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,8BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCjBjCjC,EAAA,CAAAmC,SAAA,eAIE;MACFnC,EAAA,CAAAC,cAAA,aAAiC;MAC/BD,EAAA,CAAAoC,UAAA,IAAAC,mCAAA,iBAGM;MACRrC,EAAA,CAAAG,YAAA,EAAM;;;MARJH,EAAA,CAAAsC,UAAA,gBAAAJ,GAAA,CAAArB,aAAA,CAA6B;MAINb,EAAA,CAAAI,SAAA,GAAS;MAATJ,EAAA,CAAAsC,UAAA,YAAAJ,GAAA,CAAApB,MAAA,CAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}